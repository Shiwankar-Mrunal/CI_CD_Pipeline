

# name: Build and deploy Python app to Azure Web App - cicd-deployvhvadda


# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read #This is required for actions/checkout

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python version
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.13'

#       - name: Create and start virtual environment
#         run: |
#           python -m venv venv
#           source venv/bin/activate
      
#       - name: Install dependencies
#         run: pip install -r requirement.txt
        
#       # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

#       - name: Upload artifact for deployment jobs
#         uses: actions/upload-artifact@v4
#         with:
#           name: python-app
#           path: |
#             .
#             !venv/

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
    
#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v4
#         with:
#           name: python-app
      
#       - name: 'Deploy to Azure Web App'
#         uses: azure/webapps-deploy@v3
#         id: deploy-to-webapp
#         with:
#           app-name: 'cicd-deploy'
#           slot-name: 'Production'

#           publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_51651230D4CE4FEF82CDDE0EF7401105 }}

name: CD Pipeline - Deploy to Azure App Service

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # needs: build-and-push  # Make sure to depend on CI pipeline job

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: List images in ACR
        run: |
          echo "Listing images in ACR: $ACR_LOGIN_SERVER"
          az acr repository list --name $ACR_NAME --output table

           echo "Listing tags for 'myapp' repository:"
            az acr repository show-tags --name $ACR_NAME --repository myapp --output table


      - name: Deploy to Azure Web App (Linux container)
      
        env:
          ACR_LOGIN_SERVER: ${{ secrets.AZURE_LOGIN_SERVER }}
          APP_SERVICE_NAME: cicd-deploy
          RESOURCE_GROUP: M-ci-cd-rg
        run: |
          IMAGE_NAME="$ACR_LOGIN_SERVER/myapp:latest"
          echo "Deploying image $IMAGE_NAME to Azure Web App $APP_SERVICE_NAME"

          # Configure the web app to use the new image from ACR
          az webapp config container set \
            --name $APP_SERVICE_NAME \
            --resource-group $RESOURCE_GROUP \
            --docker-custom-image-name $IMAGE_NAME \
            --docker-registry-server-url https://$AZURE_LOGIN_SERVER

          # Restart the app to apply changes
          az webapp restart --name $APP_SERVICE_NAME --resource-group $RESOURCE_GROUP









