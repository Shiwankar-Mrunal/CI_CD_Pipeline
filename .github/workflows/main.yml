name: CI Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |  
        python -m pip install --upgrade pip
        pip install -r requirement.txt  # <-- fixed typo here

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Run unit tests
      run: |
        pip install pytest
        if [ -d tests ]; then pytest tests/; else echo "No tests directory found, skipping tests."; fi

    - name: Security scan with Bandit
      run: |
        pip install bandit
        bandit -r . --exit-zero    

    - name: Build Docker image
      run: |
        docker build -t myapp:latest .

    - name: Notify build status
      run: |              
        echo "Build completed successfully"


  build-and-push:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure Container Registry Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_LOGIN_SERVER}}
        username: ${{ secrets.AZURE_USERNAME }}
        password: ${{ secrets.AZURE_PASSWORD1 }}

    - name: Build and Push Docker Image
      env:
        ACR_LOGIN_SERVER: ${{ secrets.AZURE_LOGIN_SERVER }}
      run: |
        echo "Building Docker image"
        docker build -t myapp:latest .

        IMAGE_NAME="$ACR_LOGIN_SERVER/myapp:latest"
        echo "Tagging image as $IMAGE_NAME"
        docker tag myapp:latest $IMAGE_NAME

        echo "Pushing image to ACR: $IMAGE_NAME"
        docker push $IMAGE_NAME
